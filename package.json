{
    "name": "@j-cake/jcake-utils",
    "displayName": "J-Cake Utils",
    "pkgName": "jcake-utils",
    "type": "module",
    "version": "v1.1.3",
    "main": "./build/index.js",
    "typings": "lib",
    "scripts": {
        "build:db": "esbuild src/db.ts --outfile=build/db.js --bundle --sourcemap --platform=node --format=esm",
        "build:dbrepl": "esbuild src/repl.ts --outfile=build/dbrepl.js --bundle --sourcemap --platform=node --format=esm",
        "build:args": "esbuild src/args.ts --outfile=build/args.js --bundle --sourcemap --platform=node --format=esm",
        "build:iter": "esbuild src/iter.ts --outfile=build/iter.js --bundle --sourcemap --platform=node --format=esm",
        "build:iterSync": "esbuild src/iter_sync.ts --outfile=build/iterSync.js --bundle --sourcemap --platform=node --format=esm",
        "build:buffer": "esbuild src/buffer.ts --outfile=build/buffer.js --bundle --sourcemap --platform=node --format=esm",
        "build:str": "esbuild src/strutil.ts --outfile=build/str.js --bundle --sourcemap --platform=node --format=esm",
        "build:state": "esbuild src/stateMgr.ts --outfile=build/state.js --bundle --sourcemap --platform=node --format=esm",
        "build:msg": "esbuild src/msgChannel.ts --outfile=build/msg.js --bundle --sourcemap --platform=node --format=esm",
        "build:lib": "esbuild src/index.ts --outfile=build/index.js --bundle --sourcemap --platform=node --format=esm",
        "build:_ln": "jq -r '{name} + {version, type, typings, exports: .exports | map_values({types, default: .deploy})}' package.json > build/package.json",
        "build:_type": "mkdir -p build/lib ; cp -r lib/* build/lib",
        "build:_test": "$npm_execpath --prefix test run build:all",
        "repl": "node --enable-source-maps=true build/dbrepl.js",
        "build": "cat package.json | jq -r '.scripts | keys_unsorted[] | select(. | startswith(\"build:\"))' | xargs -d \\\\n -I {} $npm_execpath run {}",
        "test": "cat test/package.json | jq -r '.tests[]' | xargs -d \\\\n -I {} bash -c 'cd ./build/test && node {}'",
        "clean": "rm -rf build node_modules package-lock.json yarn.lock .yarn-cache pnpm-lock.yaml .pnpm* test/node_modules test/pnpm* test/.pnpm* test/package-lock.json test/.yarn-cache"
    },
    "dependencies": {
        "chalk": "latest",
        "lodash": "latest"
    },
    "devDependencies": {
        "@types/node": "latest",
        "@types/lodash": "latest",
        "typescript": "latest",
        "esbuild": "latest"
    },
    "bin": {
        "dbrepl": "build/dbrepl.js"
    },
    "typesVersions": {
        "*": {
            "exported": [
                "lib",
                "def",
                "build/lib",
                "build/def"
            ]
        }
    },
    "exports": {
        ".": {
            "types": "./build/lib/index.d.ts",
            "default": "./build/index.js",
            "deploy": "./index.js"
        },
        "./args": {
            "types": "./lib/args.d.ts",
            "default": "./build/args.js",
            "deploy": "./args.js"
        },
        "./buffer": {
            "types": "./lib/buffer.d.ts",
            "default": "./build/buffer.js",
            "deploy": "./buffer.js"
        },
        "./db": {
            "types": "./lib/db.d.ts",
            "default": "./build/db.js",
            "deploy": "./db.js"
        },
        "./iter": {
            "types": "./lib/iter.d.ts",
            "default": "./build/iter.js",
            "deploy": "./iter.js"
        },
        "./iterSync": {
            "types": "./lib/iterSync.d.ts",
            "default": "./build/iterSync.js",
            "deploy": "./iterSync.js"
        },
        "./str": {
            "types": "./lib/str.d.ts",
            "default": "./build/string.js",
            "deploy": "./string.js"
        },
        "./state": {
            "types": "./lib/state.d.ts",
            "default": "./build/state.js",
            "deploy": "./state.js"
        },
        "./msg": {
            "types": "./lib/msg.d.ts",
            "default": "./build/msg.js",
            "deploy": "./msg.js"
        }
    },
    "publishConfig": {
        "registry": "https://npm.pkg.github.com"
    }
}
